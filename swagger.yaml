openapi: "3.0.3"
info:
  description: "Official documentation for the invo.space API."
  version: "0.1.0"
  title: "invo.space"
  contact:
    email: "bros@codebros.cz"

servers:
  - url: "https://invo.space/api/v1"
    description: "Production server"

paths:
  /invoices:
#    $ref: "./paths/invoices.yaml"
    get:
      tags:
        - invoices
      summary: "List invoices"
      description: "Returns a list of invoices."
      operationId: "getInvoices"
      responses:
        200:
          description: "A list of invoices."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"

components:
  schemas:
    Address:
      type: object
      properties:
        address:
          type: string
          description: Street and house number
          example: Hradčanská 1
        city:
          type: string
          example: Praha
        zip:
          type: string
          description: Postal code
          example: 110 00
        country:
          type: string
          example: Česká Republika

    Document:
      required:
        - name
        - photoUrls
      type: object
      properties:
        symbol:
          type: integer
          format: int64
          example: 20230012
        uuid:
          type: string
          format: uuid4
        issuedAt:
          type: string
          format: date-time
          description: Date of issuance that appears on the document
        deadlineAt:
          type: string
          format: date-time
          description: Date until when one wants the payment to be made
        paidAt:
          type: string
          format: date-time
          description: Date of payment that appear on the document
        description:
          type: string
          nullable: true
          description: Line of text that appears above the list of document items
        vs:
          type: string
          format: numeric-string
          description: Variable symbol
        ss:
          type: string
          format: numeric-string
          description: Specific symbol
        ks:
          type: string
          format: numeric-string
          description: Constant symbol
        createdAt:
          type: string
          format: date-time
          description: Date of creation of the document
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Date of last modification of the document
        customer:
          $ref: '#/components/schemas/Participant'
        supplier:
          $ref: '#/components/schemas/Participant'
        beneficiary:
          anyOf:
            - $ref: '#/components/schemas/Participant'
            - type: 'null'
        items:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'

    DocumentItem:
      type: object
      required:
        - amount
        - unit
        - description
        - unitPriceTaxFree
        - unitTax
        - unitPrice
        - totalPriceTaxFree
        - totalTax
        - totalPrice
      properties:
        amount:
          type: number
          format: float
          description: Quantity of the item
        unit:
          type: string
          description: Unit of the item
          example:
            - h
            - MD
            - x
            - ks
        description:
          type: string
          description: Description of the item
        unitPriceTaxFree:
          description: Price excluding VAT of a single unit of the item. Is the same as unit unitPrice if no VAT is defined.
          allOf: # todo this nest is a hack for openapi 3.0, see https://github.com/OAI/OpenAPI-Specification/issues/1514#issuecomment-1386613645
            - $ref: "#/components/schemas/Money"
        unitTax:
          description: Tax on a single unit of the item. Is be zero if no VAT is defined.
          allOf:
            - $ref: "#/components/schemas/Money"
        unitPrice:
          description: Unit price of a single unit of the item
          allOf:
            - $ref: "#/components/schemas/Money"
        taxRate:
          type: integer
          description: Tax rate applied on the item
        totalPriceTaxFree:
          description: Price excluding VAT of the whole item. Is the same as unit totalPrice if no VAT is defined.
          allOf:
            - $ref: "#/components/schemas/Money"
        totalTax:
          description: Tax on the whole item. Is be zero if no VAT is defined.
          allOf:
            - $ref: "#/components/schemas/Money"
        totalPrice:
          description: Total price of the whole item
          allOf:
            - $ref: "#/components/schemas/Money"

    Invoice:
      allOf:
        - $ref: '#/components/schemas/Document'
        - type: object
          properties:
            taxableAt:
              type: string
              format: date-time
              description: Date of VAT applicability (DUZP in CZE)
            order:
              type: string
              nullable: true
              description: Reference to Order ID.

    Money:
      type: object
      properties:
        amount:
          type: string
          description: Amount of currency in cents, e.g. 1000 means 10.00 EUR
          example: 1250
        currency:
          type: string
          description: ISO currency format. So far only CZK is supported.
          example: EUR

    Participant:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Full name of the participant
        company:
          type: string
          description: Optional company name of the participant. If filled, appears on the invoice instead of name.
        email:
          type: string
          format: email
          example: email@example.com
        phone:
          type: string
          example: 603112233
        ico:
          type: string
          nullable: true
          description: Company identification number, may not be present (e.g. end consumer)
          example: 45274649
        dic:
          type: string
          nullable: true
          description: Tax identification number (TIN), may not be presenter
          example: CZ45274649
        accountNumber:
          type: string
          description: Account number including bank code
          example: 1234567890/0000
        iban:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
